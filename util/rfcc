#!/bin/bash
[ "$1" ] || exit 1

T=/tmp/rfcc.$$

echo "char const _TC[] = { " > $1_text.h
(a=$(cat $1.conf);for (( i=0; i<${#a}; i++ )); do printf %d, "'${a:i:1}"; done) >> $1_text.h
echo "0 };" >> $1_text.h
echo -n "char const *_ID = \"" >> $1_text.h
echo -n $(md5sum $1.conf) >> $1_text.h
echo "\\n\";" >> $1_text.h
echo -n "char const *_DATE = \"" >> $1_text.h
echo -n $(date) >> $1_text.h
echo "\\n\";" >> $1_text.h

(echo -e "#include <string.h>\\n#include <unistd.h>\\n#include \"$1_text.h\"\\n#include \"rf.h\"\\nint main(int argc, char **argv){if(argc>1&&!strcmp(argv[1],\"--date\")){write(1,_DATE,strlen(_DATE));_exit(0);}if(argc>1&&!strcmp(argv[1],\"--id\")){write(1,_ID,strlen(_ID));_exit(0);}if(argc>1&&!strcmp(argv[1],\"-L\")){write(1,_TC,strlen(_TC));_exit(0);}if(argc>1&&!strcmp(argv[1],\"-D\"))debug();_rf_init();\\n#line 0 \"$1.conf\"\\n"; cat $1.conf; echo "_exit(0);}") > $T
echo "gcc -Wall -c -x c -o $1.o < $T"
if ! gcc -Wall -c -x c -o $1.o - < $T; then
    echo $T failed
    exit 1
fi
echo gcc -o $1.rf rf.o $1.o -lpcre && rm -f $T
gcc -o $1.rf rf.o $1.o -lpcre && rm -f $T

